{"version":3,"sources":["components/ToDoListItem.js","components/ToDoList.js","components/Input.js","components/Navigation.js","components/ToDoApp.js","App.js","serviceWorker.js","index.js"],"names":["ToDoListItem","props","value","editingStatus","react_default","a","createElement","id","className","doneStatus","key","myKey","onSubmit","onEditSubmit","type","onChange","onEditingChange","todoContent","name","checked","handleCheckBoxChange","htmlFor","onClick","onEdit","onDelete","ToDoList","items","map","item","i","ToDoListItem_ToDoListItem","onDone","Input","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","placeholder","React","Component","Navigation","displayAllTodos","displayCompletedTodos","displayRemainingTodos","currentList","href","ToDoApp","_Component","_this","call","storageTodos","window","localStorage","getItem","storageTodosArr","JSON","parse","state","currentText","todoList","handleOnChange","bind","assertThisInitialized","handleOnSubmit","handleOnDone","handleOnDelete","handleOnEdit","handleEditChange","e","preventDefault","setState","target","_ref","deleteId","parentNode","getAttribute","newToDoList","concat","toConsumableArray","splice","findIndex","doneId","doneObj","assign","filter","editingId","editingObj","Date","now","toString","formChilds","childNodes","todoItem","clear","setItem","stringify","Fragment","Navigation_Navigation","Input_Input","ToDoList_ToDoList","filterDisplayList","App","ToDoApp_ToDoApp","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8PAEaA,EAAe,SAACC,GAC3B,OAAGA,EAAMC,MAAMC,cAEXC,EAAAC,EAAAC,cAAA,MAAIC,GAAIN,EAAMC,MAAMK,GAAIC,UAAWP,EAAMC,MAAMO,WAAa,gDAAkD,iCAAkCC,IAAK,QAAUT,EAAMU,OACnKP,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAsBI,SAAUX,EAAMY,cACpDT,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAOP,GAAI,SAAWN,EAAMU,MAAOI,SAAUd,EAAMe,gBAAiBd,MAAOD,EAAMC,MAAMe,YAAaC,KAAM,SAAWjB,EAAMU,QACvIP,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,oCAMPF,EAAAC,EAAAC,cAAA,MAAIE,UAAWP,EAAMC,MAAMO,WAAa,gDAAkD,iCAAkCC,IAAK,QAAUT,EAAMU,MAAOJ,GAAIN,EAAMC,MAAMK,IACtKH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,WAAWK,QAASlB,EAAMC,MAAMO,WAAa,UAAY,GAAIM,SAAUd,EAAMmB,qBAAsBb,GAAI,SAAWN,EAAMU,MAAOT,MAAO,SAAWD,EAAMU,MAAOO,KAAM,SAAWjB,EAAMU,QACjMP,EAAAC,EAAAC,cAAA,SAAOE,UAAWP,EAAMC,MAAMO,WAAa,iBAAmB,GAAIY,QAAS,SAAWpB,EAAMU,OAAQV,EAAMC,MAAMe,cAElHb,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,kBAAkBc,QAASrB,EAAMsB,QAAnD,gBACAnB,EAAAC,EAAAC,cAAA,UAAQE,UAAU,iBAAiBc,QAASrB,EAAMuB,UAAlD,mBClBGC,EAAW,SAACxB,GAAD,OAEpBG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACXP,EAAMyB,MAAMC,IAAI,SAACC,EAAMC,GAEtB,OAAQzB,EAAAC,EAAAC,cAACwB,EAAD,CACN5B,MAAO0B,EACPlB,IAAKmB,EACLlB,MAAOkB,EACPT,qBAAsBnB,EAAMmB,qBAC5BJ,gBAAiBf,EAAMe,gBACvBQ,SAAUvB,EAAMuB,SAChBO,OAAQ9B,EAAM8B,OACdR,OAAQtB,EAAMsB,OACdV,aAAcZ,EAAMY,mBCfjBmB,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAtB,IAAA,SAAAR,MAAA,WAEI,OACEE,EAAAC,EAAAC,cAAA,QAAME,UAAU,0BAA0BI,SAAUwB,KAAKnC,MAAMW,UAC7DR,EAAAC,EAAAC,cAAA,SACEQ,KAAMsB,KAAKnC,MAAMa,KACjB6B,YAAaP,KAAKnC,MAAM0C,YACxBnC,UAAU,eACVO,SAAUqB,KAAKnC,MAAMc,SACrBb,MAAOkC,KAAKnC,MAAMC,aAT5B8B,EAAA,CAA2BY,IAAMC,WCApBC,EAAa,SAAC7C,GAAD,OAEtBG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,yBACXP,EAAMyB,MAAMC,IAAI,SAACC,EAAMC,GAAP,OAEbzB,EAAAC,EAAAC,cAAA,MAAII,IAAK,SAAWmB,EAAGrB,UAAU,YAC/BJ,EAAAC,EAAAC,cAAA,KACEgB,QAAgB,IAANO,EAAW5B,EAAM8C,gBAA0B,IAANlB,EAAW5B,EAAM+C,sBAAwB/C,EAAMgD,sBAC9FzC,UAAYP,EAAMiD,cAAgBrB,EAAK,kBAAoB,WAC3DsB,KAAK,KAAKvB,QCLXwB,EAAb,SAAAC,GAEE,SAAAD,EAAYnD,GAAO,IAAAqD,EAAApB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GACjBE,EAAApB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAG,KAAAnB,KAAMnC,IAEN,IAAMuD,EAAeC,OAAOC,aAAaC,QAAQ,gBAC3CC,EAAkBJ,EAAeK,KAAKC,MAAMN,GAAgB,GAJjD,OAOjBF,EAAKS,MAAQ,CACXC,YAAa,GACbC,SAAUL,EACVV,YAAa,GAEfI,EAAKY,eAAiBZ,EAAKY,eAAeC,KAApBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACtBA,EAAKe,eAAiBf,EAAKe,eAAeF,KAApBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACtBA,EAAKgB,aAAehB,EAAKgB,aAAaH,KAAlBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACpBA,EAAKiB,eAAiBjB,EAAKiB,eAAeJ,KAApBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACtBA,EAAKkB,aAAelB,EAAKkB,aAAaL,KAAlBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACpBA,EAAKlC,qBAAuBkC,EAAKlC,qBAAqB+C,KAA1BjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KAC5BA,EAAKmB,iBAAmBnB,EAAKmB,iBAAiBN,KAAtBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACxBA,EAAKzC,aAAeyC,EAAKzC,aAAasD,KAAlBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACpBA,EAAKP,gBAAkBO,EAAKP,gBAAgBoB,KAArBjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KACvBA,EAAKN,sBAAwBM,EAAKN,sBAAsBmB,KAA3BjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KAC7BA,EAAKL,sBAAwBK,EAAKL,sBAAsBkB,KAA3BjC,OAAAkC,EAAA,EAAAlC,QAAAkC,EAAA,EAAAlC,CAAAoB,KAtBZA,EAFrB,OAAApB,OAAAO,EAAA,EAAAP,CAAAkB,EAAAC,GAAAnB,OAAAQ,EAAA,EAAAR,CAAAkB,EAAA,EAAA1C,IAAA,kBAAAR,MAAA,SA2BkBwE,GACdA,EAAEC,iBACFvC,KAAKwC,SAAS,CACZ1B,YAAa,MA9BnB,CAAAxC,IAAA,wBAAAR,MAAA,SAiCwBwE,GACpBA,EAAEC,iBACFvC,KAAKwC,SAAS,CACZ1B,YAAa,MApCnB,CAAAxC,IAAA,wBAAAR,MAAA,SAuCwBwE,GACpBA,EAAEC,iBACFvC,KAAKwC,SAAS,CACZ1B,YAAa,MA1CnB,CAAAxC,IAAA,iBAAAR,MAAA,SA4DiBwE,GACbtC,KAAKwC,SAAS,CACZZ,YAAaU,EAAEG,OAAO3E,UA9D5B,CAAAQ,IAAA,iBAAAR,MAAA,SAkEiBwE,GAAG,IAAAI,EAEhBJ,EAAEC,iBACF,IAAMI,EAAWL,EAAEG,OAAOG,WAAWA,WAAWC,aAAa,MACvDC,GAAcJ,EAAA,IAAGK,OAAH5C,MAAAuC,EAAA5C,OAAAkD,EAAA,EAAAlD,CAAaE,KAAK2B,MAAME,WAE5CiB,EAAYG,OAAOH,EAAYI,UAAU,SAAC1D,GAAU,OAAOA,EAAKrB,KAAOwE,IAAc,GAErF3C,KAAKwC,SAAS,CACZX,SAAUiB,MA3EhB,CAAAxE,IAAA,eAAAR,MAAA,SA+EewE,GAEX,IAAMa,EAASb,EAAEG,OAAOG,WAAWA,WAAWC,aAAa,MACrDC,EAAc,GAAGC,OAAO/C,KAAK2B,MAAME,UACnCuB,EAAUtD,OAAOuD,OAAO,GAAIP,EAAYQ,OAAO,SAAC9D,GAAW,OAAOA,EAAKrB,KAAOgF,IAAW,IAC/FC,EAAQ/E,YAAc+E,EAAQ/E,WAC9ByE,EAAYA,EAAYI,UAAU,SAAC1D,GAAU,OAAOA,EAAKrB,KAAOgF,KAAcC,EAG9EpD,KAAKwC,SAAS,CACZX,SAAUiB,MAzFhB,CAAAxE,IAAA,eAAAR,MAAA,SA8FewE,GACX,IAAMiB,EAAYjB,EAAEG,OAAOG,WAAWA,WAAWC,aAAa,MACxDC,EAAc,GAAGC,OAAO/C,KAAK2B,MAAME,UACnC2B,EAAa1D,OAAOuD,OAAO,GAAIP,EAAYQ,OAAO,SAAC9D,GAAW,OAAOA,EAAKrB,KAAOoF,IAAc,IACrGC,EAAWzF,eAAiByF,EAAWzF,cACvC+E,EAAYA,EAAYI,UAAU,SAAC1D,GAAU,OAAOA,EAAKrB,KAAOoF,KAAiBC,EAGjFxD,KAAKwC,SAAS,CACZX,SAAUiB,MAvGhB,CAAAxE,IAAA,iBAAAR,MAAA,SA6GiBwE,GACbA,EAAEC,iBACF,IAOMO,EAAW,CANE,CACjBjE,YAFoBmB,KAAK2B,MAAMC,YAG/BvD,YAAY,EACZN,eAAe,EACfI,GAAIsF,KAAKC,MAAMC,aAEAZ,OAAAjD,OAAAkD,EAAA,EAAAlD,CAAmBE,KAAK2B,MAAME,WAC/C7B,KAAKwC,SAAS,CACZX,SAAUiB,EACVlB,YAAa,OAzHnB,CAAAtD,IAAA,uBAAAR,MAAA,SA6HuBwE,GACnBtC,KAAKkC,aAAaI,KA9HtB,CAAAhE,IAAA,mBAAAR,MAAA,SAiImBwE,GACf,IAAMiB,EAAYjB,EAAEG,OAAOG,WAAWA,WAAWC,aAAa,MACxDC,EAAc,GAAGC,OAAO/C,KAAK2B,MAAME,UACnC2B,EAAa1D,OAAOuD,OAAO,GAAIP,EAAYQ,OAAO,SAAC9D,GAAW,OAAOA,EAAKrB,KAAOoF,IAAc,IACrGC,EAAW3E,YAAcyD,EAAEG,OAAO3E,MAClCgF,EAAYA,EAAYI,UAAU,SAAC1D,GAAW,OAAOA,EAAKrB,KAAOoF,KAAiBC,EAElFxD,KAAKwC,SAAS,CACZX,SAAUiB,MAzIhB,CAAAxE,IAAA,eAAAR,MAAA,SA+IewE,GACXA,EAAEC,iBACF,IAAMgB,EAAYjB,EAAEG,OAAOG,WAAWC,aAAa,MAC7CC,EAAc,GAAGC,OAAO/C,KAAK2B,MAAME,UACnC2B,EAAa1D,OAAOuD,OAAO,GAAIP,EAAYQ,OAAO,SAAC9D,GAAW,OAAOA,EAAKrB,KAAOoF,IAAc,IAE/FK,EAAatB,EAAEG,OAAOoB,WAC5BL,EAAW3E,YAAc+E,EAAW,GAAG9F,MACvC0F,EAAWzF,eAAgB,EAC3B+E,EAAYA,EAAYI,UAAU,SAAC1D,GAAW,OAAOA,EAAKrB,KAAOoF,KAAiBC,EAGlFxD,KAAKwC,SAAS,CACZX,SAAUiB,MA5JhB,CAAAxE,IAAA,oBAAAR,MAAA,WAmKI,OAAOkC,KAAK2B,MAAMb,aAChB,KAAK,EACH,OAAOd,KAAK2B,MAAME,SACpB,KAAK,EACH,OAAO7B,KAAK2B,MAAME,SAASyB,OAAO,SAACQ,GACjC,OAAOA,EAASzF,aAEpB,KAAK,EACH,OAAO2B,KAAK2B,MAAME,SAASyB,OAAO,SAACQ,GACjC,OAAQA,EAASzF,aAErB,QACE,OAAO2B,KAAK2B,MAAME,YA/K1B,CAAAvD,IAAA,SAAAR,MAAA,WAwLI,OAHAuD,OAAOC,aAAayC,QACpB1C,OAAOC,aAAa0C,QAAQ,eAAgBvC,KAAKwC,UAAUjE,KAAK2B,MAAME,WAGpE7D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiG,SAAA,KACElG,EAAAC,EAAAC,cAACiG,EAAD,CACE7E,MAAO,CAAC,MAAO,YAAa,aAC5BwB,YAAad,KAAK2B,MAAMb,YACxBH,gBAAiBX,KAAKW,gBACtBC,sBAAuBZ,KAAKY,sBAC5BC,sBAAuBb,KAAKa,wBAE9B7C,EAAAC,EAAAC,cAACkG,EAAD,CACEtG,MAAOkC,KAAK2B,MAAMC,YAClBlD,KAAK,OACL6B,YAAY,eACZ5B,SAAUqB,KAAK8B,eACftD,SAAUwB,KAAKiC,iBAEjBjE,EAAAC,EAAAC,cAACmG,EAAD,CACErF,qBAAsBgB,KAAKhB,qBAC3BM,MAAOU,KAAKsE,oBACZlF,SAAUY,KAAKmC,eACfxC,OAAQK,KAAKkC,aACb/C,OAAQa,KAAKoC,aACbxD,gBAAiBoB,KAAKqC,iBACtB5D,aAAcuB,KAAKvB,oBA/M7BuC,EAAA,CAA6BP,aCUd8D,mLATX,OACEvG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACsG,EAAD,cALU/D,aCQEgE,QACW,cAA7BpD,OAAOqD,SAASC,UAEe,UAA7BtD,OAAOqD,SAASC,UAEhBtD,OAAOqD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9G,EAAAC,EAAAC,cAAC6G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d65ff63e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ToDoListItem = (props) => {\n  if(props.value.editingStatus) {\n    return (\n      <li id={props.value.id} className={props.value.doneStatus ? 'done_task_item list-group-item todo_list_item' : 'list-group-item todo_list_item'} key={'item_' + props.myKey}>\n        <form className='list_item_edit_form' onSubmit={props.onEditSubmit}>\n          <input type='text' id={'input_' + props.myKey} onChange={props.onEditingChange} value={props.value.todoContent} name={'input_' + props.myKey}  />\n          <p><em>Press Enter To Save</em></p>\n        </form>\n      </li>\n    );\n  } else {\n    return (\n      <li className={props.value.doneStatus ? 'done_task_item list-group-item todo_list_item' : 'list-group-item todo_list_item'} key={'item_' + props.myKey} id={props.value.id}>\n        <div className='list_item_display_text'>\n          <input type='checkbox' checked={props.value.doneStatus ? 'checked' : ''} onChange={props.handleCheckBoxChange} id={'input_' + props.myKey} value={'input_' + props.myKey} name={'input_' + props.myKey}  />\n          <label className={props.value.doneStatus ? 'done_task_text' : ''} htmlFor={'input_' + props.myKey}>{props.value.todoContent}</label>\n        </div>\n        <div className='list_btn_group'>\n          <button className=\"btn btn-primary\" onClick={props.onEdit}>&#128393;</button>\n          <button className=\"btn btn-danger\" onClick={props.onDelete}>&#128502;</button>\n        </div>\n      </li>\n    );\n  }\n\n\n};\n","import React from 'react';\nimport { ToDoListItem } from './ToDoListItem';\n\nexport const ToDoList = (props) =>\n  (\n    <ul className=\"list-group\">\n      {props.items.map((item, i) => {\n\n        return (<ToDoListItem\n          value={item}\n          key={i}\n          myKey={i}\n          handleCheckBoxChange={props.handleCheckBoxChange}\n          onEditingChange={props.onEditingChange}\n          onDelete={props.onDelete}\n          onDone={props.onDone}\n          onEdit={props.onEdit}\n          onEditSubmit={props.onEditSubmit} />);\n\n      }\n      )}\n    </ul>\n  );\n\n","import React from 'react';\n\nexport class Input extends React.Component {\n  render() {\n    return (\n      <form className=\"add_item_bar form-group\" onSubmit={this.props.onSubmit}>\n        <input\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          className=\"form-control\"\n          onChange={this.props.onChange}\n          value={this.props.value} />\n      </form>\n\n    );\n  }\n\n}\n","import React from 'react';\n\nexport const Navigation = (props) =>\n  (\n    <ul className=\"nav nav-fill nav-tabs\">\n      {props.items.map((item, i) =>\n        (\n          <li key={'index_' + i} className='nav-item'>\n            <a\n              onClick={(i === 0) ? props.displayAllTodos : ((i === 1) ? props.displayCompletedTodos : props.displayRemainingTodos)}\n              className={(props.currentList === i) ? 'nav-link active' : 'nav-link'}\n              href=\"/\">{item}</a>\n          </li>\n        )\n      )}\n    </ul>\n  );\n","import React, { Component } from 'react';\nimport '../App.css';\nimport { ToDoList } from './ToDoList';\nimport { Input } from './Input';\nimport { Navigation } from './Navigation';\n\nexport class ToDoApp extends Component {\n\n  constructor(props) {\n    super(props);\n    // window.localStorage.clear();\n    const storageTodos = window.localStorage.getItem('storageTodos');\n    const storageTodosArr = storageTodos ? JSON.parse(storageTodos) : [];\n    // console.log(storageTodosArr);\n\n    this.state = {\n      currentText: '',\n      todoList: storageTodosArr,\n      currentList: 0 // 0: all, 1: completed, 2: remaining\n    };\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleOnDone = this.handleOnDone.bind(this);\n    this.handleOnDelete = this.handleOnDelete.bind(this);\n    this.handleOnEdit = this.handleOnEdit.bind(this);\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n    this.handleEditChange = this.handleEditChange.bind(this);\n    this.onEditSubmit = this.onEditSubmit.bind(this);\n    this.displayAllTodos = this.displayAllTodos.bind(this);\n    this.displayCompletedTodos = this.displayCompletedTodos.bind(this);\n    this.displayRemainingTodos = this.displayRemainingTodos.bind(this);\n    // this.displayTodo = this.displayTodo.bind(this);\n  }\n  displayAllTodos(e) {\n    e.preventDefault();\n    this.setState({\n      currentList: 0\n    });\n  }\n  displayCompletedTodos(e) {\n    e.preventDefault();\n    this.setState({\n      currentList: 1\n    });\n  }\n  displayRemainingTodos(e) {\n    e.preventDefault();\n    this.setState({\n      currentList: 2\n    });\n  }\n\n  // displayTodo(i) {\n  //   console.log('dtd');\n  //   switch(i) {\n  //     case 0:\n  //       return this.displayAllTodos;\n  //     case 1:\n  //       return this.displayCompletedTodos;\n  //     case 2:\n  //       return this.displayRemainingTodos;\n  //     default:\n  //       return this.displayAllTodos;\n  //   }\n  // }\n\n  handleOnChange(e) {\n    this.setState({\n      currentText: e.target.value\n    });\n  }\n\n  handleOnDelete(e) {\n    // console.log('delete');\n    e.preventDefault();\n    const deleteId = e.target.parentNode.parentNode.getAttribute('id');\n    const newToDoList = [].concat(...this.state.todoList);\n    // const deleteObj = Object.assign({}, newToDoList.filter((item) => { return item.id === deleteId; }));\n    newToDoList.splice(newToDoList.findIndex((item) => {return item.id === deleteId; }), 1);\n\n    this.setState({\n      todoList: newToDoList\n    });\n\n  }\n  handleOnDone(e) {\n\n    const doneId = e.target.parentNode.parentNode.getAttribute('id');\n    const newToDoList = [].concat(this.state.todoList);\n    const doneObj = Object.assign({}, newToDoList.filter((item) => { return item.id === doneId; })[0]);\n    doneObj.doneStatus = !doneObj.doneStatus;\n    newToDoList[newToDoList.findIndex((item) => {return item.id === doneId; })] = doneObj;\n\n    // console.log(this.state);\n    this.setState({\n      todoList: newToDoList\n    });\n\n    // setTimeout(()=> console.log(this.state), 1000);\n  }\n  handleOnEdit(e) {\n    const editingId = e.target.parentNode.parentNode.getAttribute('id');\n    const newToDoList = [].concat(this.state.todoList);\n    const editingObj = Object.assign({}, newToDoList.filter((item) => { return item.id === editingId; })[0]);\n    editingObj.editingStatus = !editingObj.editingStatus;\n    newToDoList[newToDoList.findIndex((item) => {return item.id === editingId; })] = editingObj;\n\n    // console.log(this.state);\n    this.setState({\n      todoList: newToDoList\n    });\n\n    // setTimeout(()=> console.log(this.state), 1000);\n  }\n\n  handleOnSubmit(e) {\n    e.preventDefault();\n    const submittedText = this.state.currentText;\n    const newToDoObj = {\n      todoContent: submittedText,\n      doneStatus: false,\n      editingStatus: false,\n      id: Date.now().toString()\n    };\n    const newToDoList = [newToDoObj, ...this.state.todoList];\n    this.setState({\n      todoList: newToDoList,\n      currentText: ''\n    });\n  }\n\n  handleCheckBoxChange(e) {\n    this.handleOnDone(e);\n  }\n\n  handleEditChange(e) {\n    const editingId = e.target.parentNode.parentNode.getAttribute('id');\n    const newToDoList = [].concat(this.state.todoList);\n    const editingObj = Object.assign({}, newToDoList.filter((item) => { return item.id === editingId; })[0]);\n    editingObj.todoContent = e.target.value;\n    newToDoList[newToDoList.findIndex((item) => { return item.id === editingId; })] = editingObj;\n    // console.log(this.state);\n    this.setState({\n      todoList: newToDoList\n    });\n\n    // setTimeout(()=> console.log(this.state), 1000);\n  }\n\n  onEditSubmit(e) {\n    e.preventDefault();\n    const editingId = e.target.parentNode.getAttribute('id');\n    const newToDoList = [].concat(this.state.todoList);\n    const editingObj = Object.assign({}, newToDoList.filter((item) => { return item.id === editingId; })[0]);\n\n    const formChilds = e.target.childNodes;\n    editingObj.todoContent = formChilds[0].value;\n    editingObj.editingStatus = false;\n    newToDoList[newToDoList.findIndex((item) => { return item.id === editingId; })] = editingObj;\n\n    // console.log(this.state);\n    this.setState({\n      todoList: newToDoList\n    });\n\n    // setTimeout(()=> console.log(this.state), 1000);\n  }\n\n  filterDisplayList() {\n    switch(this.state.currentList) {\n      case 0: // all\n        return this.state.todoList;\n      case 1: // completed\n        return this.state.todoList.filter((todoItem) => {\n          return todoItem.doneStatus;\n        });\n      case 2: // remaining\n        return this.state.todoList.filter((todoItem) => {\n          return !todoItem.doneStatus;\n        });\n      default:\n        return this.state.todoList;\n    }\n  }\n\n  render() {\n\n    window.localStorage.clear();\n    window.localStorage.setItem('storageTodos', JSON.stringify(this.state.todoList));\n\n    return (\n      <>\n        <Navigation\n          items={['All', 'Completed', 'Remaining']}\n          currentList={this.state.currentList}\n          displayAllTodos={this.displayAllTodos}\n          displayCompletedTodos={this.displayCompletedTodos}\n          displayRemainingTodos={this.displayRemainingTodos} />\n\n        <Input\n          value={this.state.currentText}\n          type='text'\n          placeholder=\"Add New TODO\"\n          onChange={this.handleOnChange}\n          onSubmit={this.handleOnSubmit}/>\n\n        <ToDoList\n          handleCheckBoxChange={this.handleCheckBoxChange}\n          items={this.filterDisplayList()}\n          onDelete={this.handleOnDelete}\n          onDone={this.handleOnDone}\n          onEdit={this.handleOnEdit}\n          onEditingChange={this.handleEditChange}\n          onEditSubmit={this.onEditSubmit} />\n      </>\n    );\n  }\n\n}\n\n// export default ToDoApp;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { ToDoApp } from './components/ToDoApp';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='App'>\n        <ToDoApp />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}